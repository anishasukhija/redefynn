// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import { validateSecureContext, detectTampering } from '@/lib/security-middleware';
import { SECURITY_CONFIG } from '@/lib/security-config';

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY;

// Validate environment variables
if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  throw new Error('Missing required Supabase environment variables. Please check your .env file.');
}

// Security validation
if (!validateSecureContext()) {
  console.error('Application must run in a secure context (HTTPS)');
}

if (detectTampering()) {
  console.error('Potential security tampering detected');
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    flowType: 'pkce'
  },
  global: {
    headers: {
      'X-Client-Info': `${import.meta.env.VITE_APP_NAME || 'redefynn'}@${import.meta.env.VITE_APP_VERSION || '1.0.0'}`,
      'X-Requested-With': 'XMLHttpRequest',
      // Add security headers
      ...(import.meta.env.PROD && {
        'Strict-Transport-Security': 'max-age=31536000; includeSubDomains',
        'X-Content-Type-Options': 'nosniff'
      })
    }
  },
  // Additional security configuration
  db: {
    schema: 'public'
  },
  // Connection timeout for security
  ...(import.meta.env.PROD && {
    realtime: {
      params: {
        eventsPerSecond: 10 // Rate limit realtime events
      }
    }
  })
});